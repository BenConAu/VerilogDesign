#pragma once

namespace Instructions
{
    enum Enum
    {
        Unknown = 0,
        Mov = 1,
        Push = 2,
        Pop = 3,
        Cmp = 4,
        CmpE = 5,
        Jmp = 6,
        Jne = 7,
        Je = 8,
        Jz = 9,
        Jnz = 10,
        Call = 11,
        Ret = 12,
        RCall = 13,
        RRet = 14,
        Add = 15,
        Sub = 16,
        MulAdd = 17,
        Inc = 18,
        Dec = 19,
        Fadd = 20,
        Fsub = 21,
        Fconv = 22,
        Fmul = 23,
        Fdiv = 24,
        Fmuladd = 25,
        Fmin = 26,
        Fmax = 27,
        Vfadd = 28,
        Dout = 29,
        Stall = 30,
    };
}
namespace OpCodes
{
    enum Enum
    {
        Unknown = 0,
        MovRR = 1,
        MovRC = 2,
        MovRdR = 3,
        MovRdRo = 4,
        MovRdC = 5,
        MovdCR = 6,
        MovdRoR = 7,
        PushR = 8,
        PopR = 9,
        CmpRR = 10,
        CmpRC = 11,
        CmpERRR = 12,
        JmpC = 13,
        JneC = 14,
        JeC = 15,
        JzRC = 16,
        JnzRC = 17,
        CallR = 18,
        Ret = 19,
        RCallRC = 20,
        RRet = 21,
        AddRRC = 22,
        AddRRR = 23,
        SubRRC = 24,
        SubRRR = 25,
        MulAddRRC = 26,
        IncR = 27,
        DecR = 28,
        FaddRRR = 29,
        FsubRR = 30,
        FconvR = 31,
        FmulRRR = 32,
        FdivRR = 33,
        FmuladdRRR = 34,
        FminRR = 35,
        FmaxRR = 36,
        VfaddRRR = 37,
        DoutR = 38,
        Stall = 39,
    };
}
bool Is8ByteOpcode(OpCodes::Enum opCodeParam);
bool IsRAMOpcode(OpCodes::Enum opCodeParam);
