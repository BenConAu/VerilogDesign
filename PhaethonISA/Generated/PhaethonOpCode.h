#pragma once

namespace Instructions
{
    enum Enum
    {
        Unknown = 0,
        Mov = 1,
        Push = 2,
        Pop = 3,
        Cmp = 4,
        CmpE = 5,
        CmpNe = 6,
        Jmp = 7,
        Jne = 8,
        Je = 9,
        Jz = 10,
        Jnz = 11,
        Call = 12,
        Ret = 13,
        RCall = 14,
        RRet = 15,
        Add = 16,
        Sub = 17,
        MulAdd = 18,
        Inc = 19,
        Dec = 20,
        Shl = 21,
        Shr = 22,
        Fadd = 23,
        Fsub = 24,
        Fconv = 25,
        Fmul = 26,
        Fdiv = 27,
        Fmuladd = 28,
        Fmin = 29,
        Fmax = 30,
        Vfadd = 31,
        Dout = 32,
        Stall = 33,
    };
}
namespace OpCodes
{
    enum Enum
    {
        Unknown = 0,
        MovRR = 1,
        MovRC = 2,
        MovRdR = 3,
        MovRdRo = 4,
        MovRdRiR = 5,
        MovRdC = 6,
        MovdCR = 7,
        MovdRoR = 8,
        MovdRiRR = 9,
        PushR = 10,
        PopR = 11,
        CmpRR = 12,
        CmpRC = 13,
        CmpERRR = 14,
        CmpNeRRR = 15,
        JmpC = 16,
        JneC = 17,
        JeC = 18,
        JzRC = 19,
        JnzRC = 20,
        CallR = 21,
        Ret = 22,
        RCallRC = 23,
        RRet = 24,
        AddRRC = 25,
        AddRRR = 26,
        SubRRC = 27,
        SubRRR = 28,
        MulAddRRC = 29,
        IncR = 30,
        DecR = 31,
        ShlRRR = 32,
        ShrRRR = 33,
        FaddRRR = 34,
        FsubRR = 35,
        FconvR = 36,
        FmulRRR = 37,
        FdivRR = 38,
        FmuladdRRR = 39,
        FminRR = 40,
        FmaxRR = 41,
        VfaddRRR = 42,
        DoutR = 43,
        Stall = 44,
    };
}
bool Is8ByteOpcode(OpCodes::Enum opCodeParam);
bool IsRAMOpcode(OpCodes::Enum opCodeParam);
