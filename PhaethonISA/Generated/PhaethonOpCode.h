#pragma once

namespace Instructions
{
    enum Enum
    {
        Unknown = 0,
        Mov = 1,
        Push = 2,
        Pop = 3,
        Cmp = 4,
        CmpE = 5,
        CmpNe = 6,
        Jmp = 7,
        Jne = 8,
        Je = 9,
        Jz = 10,
        Jnz = 11,
        Call = 12,
        Ret = 13,
        RCall = 14,
        RRet = 15,
        Add = 16,
        Sub = 17,
        MulAdd = 18,
        Inc = 19,
        Dec = 20,
        Fadd = 21,
        Fsub = 22,
        Fconv = 23,
        Fmul = 24,
        Fdiv = 25,
        Fmuladd = 26,
        Fmin = 27,
        Fmax = 28,
        Vfadd = 29,
        Dout = 30,
        Stall = 31,
    };
}
namespace OpCodes
{
    enum Enum
    {
        Unknown = 0,
        MovRR = 1,
        MovRC = 2,
        MovRdR = 3,
        MovRdRo = 4,
        MovRdC = 5,
        MovdCR = 6,
        MovdRoR = 7,
        PushR = 8,
        PopR = 9,
        CmpRR = 10,
        CmpRC = 11,
        CmpERRR = 12,
        CmpNeRRR = 13,
        JmpC = 14,
        JneC = 15,
        JeC = 16,
        JzRC = 17,
        JnzRC = 18,
        CallR = 19,
        Ret = 20,
        RCallRC = 21,
        RRet = 22,
        AddRRC = 23,
        AddRRR = 24,
        SubRRC = 25,
        SubRRR = 26,
        MulAddRRC = 27,
        IncR = 28,
        DecR = 29,
        FaddRRR = 30,
        FsubRR = 31,
        FconvR = 32,
        FmulRRR = 33,
        FdivRR = 34,
        FmuladdRRR = 35,
        FminRR = 36,
        FmaxRR = 37,
        VfaddRRR = 38,
        DoutR = 39,
        Stall = 40,
    };
}
bool Is8ByteOpcode(OpCodes::Enum opCodeParam);
bool IsRAMOpcode(OpCodes::Enum opCodeParam);
