void main()
{
    // For now this is a dummy for doing a loop
    word i = 0;

    // Position in byte we receive
    word bytePos = 0;

    // Position in word array
    word wordPos = 0;

    // The word we are currently packing
    word currentWord = 0;

    // The collection of words
    ptr<word> pData = castptr<word>(__datasegmentend);

    // Wait for a packet starting with the right value
    while (i .< 1)
    {
        word input = readport(1);
        if (input >. 255)
        {
            // Pack into the word
            packbyte(currentWord, input, bytePos);

            bytePos = bytePos + 1;
            if (bytePos == 4)
            {
                // Print that business
                __emit(doutr, currentWord);

                // Store that business
                pData[wordPos] = currentWord;

                // Back to the start of the word
                bytePos = 0;
                
                // Next word
                wordPos = wordPos + 1;

                // Program needs header and length
                if (wordPos >. 2)
                {
                    // Correct header
                    if (0x1337beef == pData[0])
                    {
                        // Did we get all of the words in the program?
                        if (wordPos - 2 == pData[1])
                        {
                            // One last statement before execute
                            __emit(doutr, 0x0f00d1e0);

                            // Execute - we need to skip the 8 byte header
                            __emit(execr, offsetptr<word>(pData, 8));

                            // If we are coming back, reset word count
                            wordPos = 0;                       
                        }
                    }
                }
            }
        }
    }
}
