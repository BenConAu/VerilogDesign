struct Allocation
{
    word length;
    ptr<Allocation> next;
    ptr<void> value;
};

struct AllocationHeader
{
    ptr<Allocation> first;
    ptr<Allocation> last;
    ptr<void> next;
};

AllocationHeader header;
Allocation firstAlloc;

void MemoryInit()
{
    firstAlloc.value = nullptr;
    firstAlloc.length = 0;
    firstAlloc.next = nullptr;

    header.first = &firstAlloc;
    header.last = &firstAlloc;
    header.next = __datasegmentend;
}

ptr<T> MemoryAlloc<T>(word size)
{
    ptr<Allocation> next;
    next = header.next;

    next->length = size;
    next->next = nullptr;
    next->value = offsetptr(header.next, sizeof(Allocation));

    header.last->next = next;
    header.next = offsetptr(header.next, sizeof(Allocation) + size);
}

void MemoryFree(ptr<void> allocation)
{
}

void main()
{
    ptr<void> alloc1;
    alloc1 = MemoryAlloc(100);
}
